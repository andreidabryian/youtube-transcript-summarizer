#!/bin/bash

# YouTube Transcript Summarizer - Startup Script
# Bash script –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Linux/Mac

echo "üöÄ –ó–∞–ø—É—Å–∫ YouTube Transcript Summarizer..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .NET 8
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if command -v dotnet &> /dev/null; then
    DOTNET_VERSION=$(dotnet --version)
    echo "‚úÖ .NET –≤–µ—Ä—Å–∏—è: $DOTNET_VERSION"
else
    echo "‚ùå .NET –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ .NET 8 SDK"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js
if command -v node &> /dev/null; then
    NODE_VERSION=$(node --version)
    echo "‚úÖ Node.js –≤–µ—Ä—Å–∏—è: $NODE_VERSION"
else
    echo "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Angular CLI
if command -v ng &> /dev/null; then
    ANGULAR_VERSION=$(ng version --json | jq -r '.angular')
    echo "‚úÖ Angular CLI –≤–µ—Ä—Å–∏—è: $ANGULAR_VERSION"
else
    echo "‚ö†Ô∏è  Angular CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    npm install -g @angular/cli
fi

echo ""
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π .NET
echo "üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ .NET –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
dotnet restore

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
cd client
npm install
cd ..

echo ""
echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏ –≤ src/YouTubeTranscriptSummarizer.API/appsettings.json"
echo "   - –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à OpenAI API –∫–ª—é—á"
echo "   - –ò–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π LLM (Ollama)"
echo ""

read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø—É—Å–∫? (y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "–ó–∞–ø—É—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω."
    exit 0
fi

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
echo ""

# –ó–∞–ø—É—Å–∫ Backend –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
echo "üîß –ó–∞–ø—É—Å–∫ Backend API..."
cd src/YouTubeTranscriptSummarizer.API
dotnet run &
BACKEND_PID=$!
cd ../..

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Backend
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Backend..."
sleep 5

# –ó–∞–ø—É—Å–∫ Frontend
echo "üé® –ó–∞–ø—É—Å–∫ Frontend..."
cd client
ng serve &
FRONTEND_PID=$!
cd ..

echo ""
echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥—Ä–µ—Å–∞:"
echo "   Frontend: http://localhost:4200"
echo "   Backend API: https://localhost:7001"
echo "   Swagger UI: https://localhost:7001/swagger"
echo ""
echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md"
echo ""
echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    kill $BACKEND_PID 2>/dev/null
    kill $FRONTEND_PID 2>/dev/null
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    exit 0
}

# –ü–µ—Ä–µ—Ö–≤–∞—Ç —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap cleanup SIGINT SIGTERM

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
wait 